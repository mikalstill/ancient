<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook V4.1//EN">
<article>
<title>Grid computing and the open grid services architecture</title>
   <subtitle>A final year project discussion paper (number two)</subtitle>

<sect1>
<title>About the author</title>
<para>
Michael's student number is 964076. He can be contacted at mikal@stillhq.com. Copyright (c) Michael Still 2002. This submission is
<postexecute><cmd>striptext</cmd><output>temp.txt</output><args>-c</args></postexecute>
<postexecute><cmd>wc -w</cmd><input>temp.txt</input></postexecute>
words, not including the code snippets.
</para>
</sect1>

<sect1>
<title>Abstract</title>
<para>
<quote>
By enabling the integration of services and resources within and across enterprises, the Grid promises to deliver new ways of doing business and practicing science, powered by on-demand access to computing, seamless access to data, and dynamic outsourcing to service providers. The Grid also both places new demands on network infrastructures and expands the notion of infrastructure to new domains. In this talk, I analyze Grid infrastructure requirements and approaches that may be taken to realizing those requirements. I illustrate the discussion with reference to significant contemporary infrastructure efforts, including TeraGrid, I-WIRE, iVDGL, the Globus Toolkit, and the Open Grid Services Architecture.
</quote>
</para>

<para>
Grid computing is the name given by computer scientists to large, loosly affiliated cooperative computing networks. The term <quote>grid</quote> is used in the sense of the electricity grid -- it is implied that the user doesn't really care where the computing resources, so long as they are provided in a timely and accurate manner.
</para>
</sect1>

<sect1><title>The meeting</title>
<para>
The talk was held at the National Institute of Engineering and Information Sciences, ANU on 8 July 2002, between 2pm and 3pm. The speaker was Ian Foster, from the Mathematics and Computer Science Division of Argonne National Laboratory, Illinois, USA. He is one of the developers of the Globus project, which is discried below.
</para>
</sect1>

<sect1><title>The globus project</title>
<para>
<quote>The Globus Project is developing fundamental technologies needed to build computational grids.  Grids are persistent environments that enable software applications to integrate instruments, displays, computational and information resources that are managed by diverse organizations in widespread locations.</quote> -- http://www.globus.org
</para>
</sect1>

<sect1><title>Stuff</title>
<para>
The grid and open grid services architecture

www.globus.org


Grids as infrastructure (e.g. electrical power distribution)
Computing and storage / data don't obey these rules yet
What about the Internet?
On demand, ubiqitious access to computing, data and services

The emergence of the grid
  E science -- the original grid driver (previously theory and experiment)
  Very large db mining
  Simulations
  Remote device access
  
"Resource sharing and coordinated problem solving in dynamic, multi-institutional virtual organizations"

Early 90's: gigabit test beds
Mid 90's: early experiments in networks and software
2002: large communities have emerged

Example: CERN's Large Hadron Collider
  1800 physicists
  150 insitutes
  32 countries

  100PB data
  50,000 CPUs
  (by 2010)

Example: NASA aviation safety

Technical requirements
  Dynamic dormation and management of virt orgs
  Online neg of acces to services (inc schedualling)
  Configur of apps and sys
  Mnagement of dist infra

Globus toolkit
  since 1996
  small stds based set of protocols
  information centric design
  open source implementation (large community)
  Enabler of services and applications




Grids and e business

  Framentation of enterprise infrastructure
  The rise of eUtility (outsourcing, ecomomies of scale: IBM, HP, SUN, MS et al)
  b2b
  Ubiq QOS

  On demand access to computing
  New applications and services
  Solution to ent computing problems

  Fight AIDs at home
  butterfly.net


Technology convergence

  Refactor globus protocol suite to enable common base and expose key capabilities
  Service orientation
  Embrace key web service technologies: std idl (from wsdl), leverage commercial efforts
  :. standard interfaces and behaviours which define required elements

  web services address discovery and invocation of persistent services
  must also handle transient service instances

  web services
    w3c: ms, ibm, sun, +
    wsdl
    soap
    ws-inspection

  life time of state
    explicit destroy
    request that the service keepalive for a little bit longer


Virtual data
  GriPhyN
  Most data is in fact computationally corrected and perhaps even simulated
  Need to track transformation and derivation information

  www.griphyn.org/chimera

  Sloan Digital Sky Survey



www.globus.org
              /ogsa
www.gridforum.org


"The Grid: blueprint for a new computing infrastructure", editted by Ian Foster and Carl Kesselman

</para>
</sect1>


<sect1><title>Response to the talk</title>
<para>

</para>
</sect1>
</article>
