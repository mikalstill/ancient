%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (theory-figure2.eps)
%%CreationDate: (Sat Jul 13 14:50:00 2002)
%%BoundingBox: 0 0 46 46
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 47 47
userdict begin
DisplayImage
0 0
47 47
12.000000
47 47
0
0
000000010000002c000000011d0037003a006f061d0037013a006f061d0037013a006f06
1d0037013a006f061d0037013a006f061d003700000000013a006f007500df063a006f01
7500df063a006f017500df063a006f017500df063a006f017500df063a006f0000000001
3a006f007500df063a006f017500df063a006f017500df063a006f017500df063a006f01
7500df063a006f00000000013a006f007500df063a006f017500df063a006f017500df06
3a006f017500df063a006f017500df063a006f00000000013a006f007500df063a006f01
7500df063a006f017500df063a006f017500df063a006f017500df063a006f0000000001
3a006f007500df063a006f017500df063a006f017500df063a006f017500df063a006f01
7500df063a006f00000000013a006f007500df063a006f017500df063a006f017500df06
3a006f017500df063a006f017500df063a006f00000000013a006f007500df063a006f01
7500df063a006f017500df063a006f017500df063a006f017500df063a006f0000000001
1d0037003a006f061d0037013a006f061d0037013a006f061d0037013a006f061d003701
3a006f061d003700000000011d0037003a006f061d0037013a006f061d0037013a006f06
1d0037013a006f061d0037013a006f061d003700000000013a006f007500df063a006f01
7500df063a006f017500df063a006f017500df063a006f017500df063a006f0000000001
3a006f007500df063a006f017500df063a006f017500df063a006f017500df063a006f01
7500df063a006f00000000013a006f007500df063a006f017500df063a006f017500df06
3a006f017500df063a006f017500df063a006f00000000013a006f007500df063a006f01
7500df063a006f017500df063a006f017500df063a006f017500df063a006f0000000001
3a006f007500df063a006f017500df063a006f017500df063a006f017500df063a006f01
7500df063a006f00000000013a006f007500df063a006f017500df063a006f017500df06
3a006f017500df063a006f017500df063a006f00000000013a006f007500df063a006f01
7500df063a006f017500df063a006f017500df063a006f017500df063a006f0000000001
1d0037003a006f061d0037013a006f061d0037013a006f061d0037013a006f061d003701
3a006f061d003700000000013f3f3f007f7f7f063f3f3f017f7f7f063f3f3f017f7f7f06
3f3f3f017f7f7f063f3f3f017f7f7f063f3f3f00000000017f7f7f00ffffff067f7f7f01
ffffff067f7f7f01ffffff067f7f7f01ffffff067f7f7f01ffffff067f7f7f0000000001
7f7f7f00ffffff067f7f7f01ffffff067f7f7f01ffffff067f7f7f01ffffff067f7f7f01
ffffff067f7f7f00000000017f7f7f00ffffff067f7f7f01ffffff067f7f7f01ffffff06
7f7f7f01ffffff067f7f7f01ffffff067f7f7f00000000017f7f7f00ffffff067f7f7f01
ffffff067f7f7f01ffffff067f7f7f01ffffff067f7f7f01ffffff067f7f7f0000000001
7f7f7f00ffffff067f7f7f01ffffff067f7f7f01ffffff067f7f7f01ffffff067f7f7f01
ffffff067f7f7f00000000017f7f7f00ffffff067f7f7f01ffffff067f7f7f01ffffff06
7f7f7f01ffffff067f7f7f01ffffff067f7f7f00000000017f7f7f00ffffff067f7f7f01
ffffff067f7f7f01ffffff067f7f7f01ffffff067f7f7f01ffffff067f7f7f0000000001
3f3f3f007f7f7f063f3f3f017f7f7f063f3f3f017f7f7f063f3f3f017f7f7f063f3f3f01
7f7f7f063f3f3f00000000013f3f3f007f7f7f063f3f3f017f7f7f063f3f3f017f7f7f06
3f3f3f0000373200006f650600373201006f650600373200000000017f7f7f00ffffff06
7f7f7f01ffffff067f7f7f01ffffff067f7f7f00006f650000dfcb06006f650100dfcb06
006f6500000000017f7f7f00ffffff067f7f7f01ffffff067f7f7f01ffffff067f7f7f00
006f650000dfcb06006f650100dfcb06006f6500000000017f7f7f00ffffff067f7f7f01
ffffff067f7f7f01ffffff067f7f7f00006f650000dfcb06006f650100dfcb06006f6500
000000017f7f7f00ffffff067f7f7f01ffffff067f7f7f01ffffff067f7f7f00006f6500
00dfcb06006f650100dfcb06006f6500000000017f7f7f00ffffff067f7f7f01ffffff06
7f7f7f01ffffff067f7f7f00006f650000dfcb06006f650100dfcb06006f650000000001
7f7f7f00ffffff067f7f7f01ffffff067f7f7f01ffffff067f7f7f00006f650000dfcb06
006f650100dfcb06006f6500000000017f7f7f00ffffff067f7f7f01ffffff067f7f7f01
ffffff067f7f7f00006f650000dfcb06006f650100dfcb06006f6500000000013f3f3f00
7f7f7f063f3f3f017f7f7f063f3f3f017f7f7f063f3f3f0000373200006f650600373201
006f650600373200000000012f001e005f003d062f001e015f003d062f001e003f3f3f00
7f7f7f063f3f3f0000373200006f650600373201006f650600373200000000015f003d00
bf007b065f003d01bf007b065f003d007f7f7f00ffffff067f7f7f00006f650000dfcb06
006f650100dfcb06006f6500000000015f003d00bf007b065f003d01bf007b065f003d00
7f7f7f00ffffff067f7f7f00006f650000dfcb06006f650100dfcb06006f650000000001
5f003d00bf007b065f003d01bf007b065f003d007f7f7f00ffffff067f7f7f00006f6500
00dfcb06006f650100dfcb06006f6500000000015f003d00bf007b065f003d01bf007b06
5f003d007f7f7f00ffffff067f7f7f00006f650000dfcb06006f650100dfcb06006f6500
000000015f003d00bf007b065f003d01bf007b065f003d007f7f7f00ffffff067f7f7f00
006f650000dfcb06006f650100dfcb06006f6500000000015f003d00bf007b065f003d01
bf007b065f003d007f7f7f00ffffff067f7f7f00006f650000dfcb06006f650100dfcb06
006f6500000000015f003d00bf007b065f003d01bf007b065f003d007f7f7f00ffffff06
7f7f7f00006f650000dfcb06006f650100dfcb06006f6500000000012f001e005f003d06
2f001e015f003d062f001e003f3f3f007f7f7f063f3f3f0000373200006f650600373201
006f650600373200000000010000002c
end
%%PageTrailer
%%Trailer
%%EOF
