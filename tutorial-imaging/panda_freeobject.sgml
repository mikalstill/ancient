<refentry>
<refmeta>
<refentrytitle>panda_freeobject</refentrytitle>
<manvolnum>3</manvolnum>
</refmeta>

<refnamediv>
<refname>panda_freeobject</refname>
<refpurpose>free the memory used by a previously created object</refpurpose>
</refnamediv>

<refsynopsisdiv>
<synopsis>
 #include&lt;panda/constants.h&gt;
 #include&lt;panda/functions.h&gt;
 void panda_freeobject (panda_pdf *output, panda_object *);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>DESCRIPTION</title>
<para><command>PANDA INTERNAL</command>. This function call frees the memory used by an object. It is used during the cleanup process prior to finishing closing a PDF document. Even if a user of the API has added object types to their code, they should not have to call this function, as their objects should be added to the object tree via <command>panda_addchild</command>() to ensure they are written to disc by <command>panda_writeobject</command>() having been traversed by <command>panda_traverseobjects</command>() at PDF close time.</para>
</refsect1>

<refsect1>
<title>RETURNS</title>
<para>None</para>
</refsect1>

<refsect1>
<title>EXAMPLE</title>
<para> #include&lt;panda/constants.h&gt;
 #include&lt;panda/functions.h&gt;
 
 panda_pdf *document;
 panda_object *obj;
 
 panda_init();
 
 document = panda_open("filename.pdf", "w");
 obj = panda_newobject(document, panda_object_normal);
 panda_freeobject(document, obj)l
</para>
</refsect1>

<refsect1>
<title>SEE ALSO</title>
<para>panda_newobject, panda_writeobject, panda_traverseobjects, panda_addchild</para>
</refsect1>

</refentry>
