<?xml version="1.0" encoding="UTF-8"?>
<!-- REMOVE ALL TEMPLATE COMMENTS FROM THE FILE BEFORE PUBLISHING; SAMPLE TEXT IS IN BRACKETS-->

<!-- CHANGE ATTRIBUTES BELOW TO "NO" TO REMOVE RATINGS AREA OR TABLE OF CONTENTS-->
<article ratings="auto" toc="auto">

<!-- IF THIS IS PART OF A SERIES, ENTER SERIES TITLE BELOW.   OTHERWISE, REMOVE THIS TAG.  DO NOT END TEXT WITH A COLON;  THE STYLESHEET HANDLES THIS-->
   <seriestitle>[Optional series title]</seriestitle>
   <papertitle>TIFF imaging with libtiff</papertitle>
   <subtitle>[Enter required paper subtitle here]</subtitle>
   <author company="TOWER Software Engineering" email="mikal@stillhq.com" jobtitle="Senior Software Engineer" name="Michael Still">Michael has been working in the image processing field for several years, including a couple of years managing and dveloping large image databases for an Australian government department. He currently works for TOWER Software, who manufacture a world leading EDMS and Records Management package named TRIM. Michael is also the developer of Panda, an open source PDF generation API, as well as being the maintainer of the comp.text.pdf USENET frequently asked questions document. You can contact Michael at <a href="mailto:mikal@stillhq.com">mikal@stillhq.com</a>.</author>

   <date month="February" year="2002"></date>
   <zone name="linux"></zone>
   <pdf url="ftp://www6.software.ibm.com/software/developer/library/[xxx.pdf]" size="xxKB"></pdf>
   <zip url="ftp://www6.software.ibm.com/software/developer/library/xxx.zip"></zip>

   <meta name="KEYWORDS" content="tiff libtiff image imaging raster bitmap" />	
   <meta name="LASTUPDATE" content="20020211 MBS"/>
        
   <relatedlist>
   <a href="">[Link 1 to related content]</a>
   <a href="">[Link 2 to related content]</a>
   </relatedlist>			
		
<!-- ENTER ARTICLE ABSTRACT BELOW.  REMOVE ANY BLANKS OR CARRIAGE RETURN CHARACTERS WITHIN THE TEXT.  KEEP THE ABSTRACT SHORT (NO MORE THAN SEVEN LINES ON THE HTML PAGE).  THESE RESTRICTIONS ARE REQUIRED FOR THE "EMAIL IT!" FUNCTION. -->	
   <abstract>TIFF is an extremely common, but quite complex raster image format. Libtiff is a standard implementation of the TIFF specification, which is free and works on many operating systems. This article discusses some of the pitfalls of TIFF, and guides the reader through use of the libtiff library.</abstract>

<p>TIFF (Tagged Image File Format) is a raster image format which was originally produced by <a href="http://www.adobe.com">Adobe</a>. Raster image formats are those which store the picture as a bitmap describing the state of pixels, as opposed to recording the length and locations of primatives such as lines and curves. Libtiff is one of the standard implementations of the TIFF specification, and is in wide use today because of its speed, power and easy source availability.</p>

<p>This article focuses on black and white TIFF images, there ins't enough space in the article to cover color images as well. These will be covered in another article in a later edition of DeveloperWorks.</p>

<p><heading refname="hard" type="major" toc="yes">Coding for TIFF can be hard</heading>	
Most file format specifications define some basic rules for the representation of the file. For instance, PNG<CHECKTHIS> (a compeditor to TIFF) documents are always big endian. TIFF doesn't mandate things like this though, here is a list of some of the seemingly basic things that it doesn't define:</p>

<ul>
  <li>The byte order -- big endian, or little endian
  <li>The fill order of the bit within the image bytes -- most significant bit first, or least significant
  <li>The meaning of a given pixel value for black and white -- is 0 black, or white?
  <li>...and so on
</ul>

<p>This means that creating a TIFF can be very easy, because it is rare to have to do any conversion of the data that you already have. It does mean, on the other hand, that being able to read in random tiff created by other applications can be very hard -- you have to code for all these possible combinations in order to be reasonably certain of having a reliable product.</p>
	
<p>So how do you write an application which can read in all these different possible permutations of the TIFF format? Well, there are some basic guidelines to follow, which will make your life easier. The most important of these is: <i>never make an assumption</i>.</p>

<!--MINOR HEADING: CODE HEADING TAG WITH TYPE="MINOR".  ENTER A REFERENCE NAME TO BE USED AS AN INLINE LINK IN THE TOC.  USE ALT= ATTRIBUTE IF YOU WANT THE TOC TEXT TO BE DIFFERENT FROM THE HEADING.  TO REMOVE THIS HEADING FROM THE TOC, CODE TOC="NO".   PRECEDE ALL MINOR HEADINGS WITH A PARAGRAPH TAG-->
<p><heading refname="h2" type="minor" toc="yes">[Minor heading 1]</heading>
[Insert paragraph text here and end the paragraph with an end paragraph tag.  To include inline code in a paragraph, surround the code snippet with a
code tag that has the attribute: type="inline".  This is an <code type="inline">inline code snippet</code> .
</p>

<!-- CODE SECTION WITH HEADING:  PLACE HEADING INSIDE CODE TAG WITH TYPE="CODE".  DO NOT SURROUND CODE SECTION WITH PARAGRAPH TAGS.  THE TOC ATTRIBUTE DETERMINES IF THIS HEADING IS INCLUDED IN THE TOC.   DEFAULT IS TOC="NO".-->
<code type="section">
<heading refname="code1" type="code" toc="no">[Caption for sample code section or code listing]</heading>
[Code goes here.  &lt;pre&gt; tags will be added automatically.

Use the b tag to surround <b>bolded code</b>.

To specify colors, use the class attribute on the b tag:
        code &lt;b class="red"&gt; for <b class="red">red</b>.
        code &lt;b class="green"&gt; for <b class="green">green</b>.
        code &lt;b class="blue"&gt; for <b class="blue">blue</b>.

Use the space key to indent lines.]
</code>

<p>[Next paragraph goes here]</p>

<!-- CODE SECTION WITHOUT HEADING:  DO NOT SURROUND CODE SECTION WITH PARAGRAPH TAGS.  THE TOC ATTRIBUTE DETERMINES IF THIS HEADING IS INCLUDED IN THE TOC.   DEFAULT IS TOC="NO".-->
<code type="section">
[This code example does not have a code heading]
</code>

<p><heading refname="h3" type="major" toc="yes">[Major heading 2]</heading>
[Insert paragraph text here and end with an end paragraph tag.]</p>

<p>[Temporarily, to code a table you must code the table and pass it through the XML processor using CDATA tags.  Use the sample table below.]</p>

<b>[Sample table title]</b>
<htmlinsert><![CDATA[

<table width="100%" cellspacing="0" cellpadding="3" border="1">
<tr valign="top">
<td><b>Heading A</b></td>
<td><b>Heading B</b></td>
<td><b>Heading C</b></td>
</tr>
<tr valign="top">
<td>Content A1</td>
<td>Content B1</td>
<td>Content C1</td>
</tr>
<tr valign="top">
<td>Content A2</td>
<td>Content B2</td>
<td>Content C2</td>
</tr>
<tr valign="top">
<td>Content A3</td>
<td>Content B3</td>
<td>Content C3</td>
</tr>
</table>

]]></htmlinsert>

<!-- FIGURE WITH HEADING:  PLACE HEADING INSIDE FIGURE TAG WITH TYPE="FIGURE".  DO NOT SURROUND FIGURE WITH PARAGRAPH TAGS.  THE TOC ATTRIBUTE DETERMINES IF THIS HEADING IS INCLUDED IN THE TOC.   DEFAULT IS TOC="NO".   ALWAYS CODE THE ALT= ATTRIBUTE FOR A FIGURE.  ALWAYS CODE CORRECT HEIGHT AND WIDTH FOR FIGURE-->
<figure>
<heading refname="figure1" type="figure" toc="no">[Figure x.   Caption for sample figure]</heading>
<img src="xxx.jpg" width="500" height="200" alt="[Sample figure; code correct height and width"/>
</figure>

<p>[Refer to figure using the reference name (refname) assigned to the figure, as follows: <a href="#figure1">Figure 1</a>. ]</p>

<!-- SIDEBAR WITH HEADING:  PLACE HEADING INSIDE SIDEBAR TAG WITH TYPE="SIDEBAR".  DO NOT SURROUND SIDEBAR WITH PARAGRAPH TAGS.  THE TOC ATTRIBUTE DETERMINES IF THIS HEADING IS INCLUDED IN THE TOC.   DEFAULT IS TOC="NO".   IF NEEDED, YOU CAN ADJUST THE WIDTH OF THE SIDEBAR USING THE WIDTH= ATTRIBUTE OF THE SIDEBAR TAG.  SPECIFY A PERCENTAGE.-->
<sidebar>
<heading refname="" type="sidebar" toc="no">[Sidebar heading]</heading>
[Insert the text for the sidebar here.  The default for the sidebar is width="30%".  To widen the sidebar, code the width attribute on the sidebar tag (specify a percentage).
<p>Start using paragraph tags with the second paragraph of the sidebar.]</p>
</sidebar>

<!-- THIRD-LEVEL HEADING:  PRECEDE ALL THIRD-LEVEL HEADINGS WITH A PARAGRAPH TAG.  FOLLOW THE HEADING WITH A BREAK TAG.-->
<p><b>[Third-level heading]</b><br />
[The third-level heading above is created using bold tags and is followed by a break tag to separate it from the paragraph text.]</p>

<p>[Next paragraph goes here with unordered list.  If you end the paragraph tag before the list, you get a space separating the text from the list.]</p>
<ul>
<li>[List item one]</li>
<li>[List item two]</li>
<li>[List item three]</li>
</ul>

<!-- RESOURCE LIST WITH HEADINGS:  PLACE HEADINGS INSIDE RESOURCELIST TAG WITH TYPE="RESOURCELIST".  DO NOT SURROUND LIST WITH PARAGRAPH TAGS, BUT USE PARAGRAPH TAGS AROUND RESOURCELIST HEADINGS.-->
<resourcelist>
<ul>
<li>The <a href="http://www.libtiff.org">libtiff</a> website is a good place to download the libtiff source. It is also quite likely there is a binary package for your choosen operating system.</li>
<li>If all else fails, then the <a href="http://partners.adobe.com/asn/developer/pdfs/tn/TIFF6.pdf">Adobe TIFF specification</a> can be useful.</li>
</ul>
<p><heading refname="" type="resourcelist" toc="no">[Sample resource list heading]</heading></p>
<ul>
<li>[First resource item and link with a heading]</li>
<li>[Second resource item and link with a heading]</li>
</ul>
</resourcelist>

</article>
