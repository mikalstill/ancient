%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (gen-forward_discrete_fourier.eps)
%%CreationDate: (Fri Nov 15 08:38:21 2002)
%%BoundingBox: 0 0 320 60
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 320 60
userdict begin
DisplayImage
0 0
320 60
12.000000
320 60
1
1
1
1
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000018f00600000000000000000000000000000000000000000000000000000
000000000000000000000086002000000000000000000000000000000000000000000000
000000000000000000000000000001460020000000000000000000000000000000000000
00000000000000000000000000000000000001483f200000000000000000000000000000
000000000000000000000000000000000000000000000128002000000000000000000000
000000000000000000000000000000000000000000000000000001280020000000000000
000000000000000000000000000000000000000000000000000000000000012800200000
000000000000000000000000000000000000000000000000000000000000000000000610
002000000000000000000000000000000000000000000000000000000000000000000000
00000f100070000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000001c00601061c000000000000000000000000000001e00c000c30e000000000
0000000000000000001a30020102080000000000000000000000000000121004000c1040
000000000000000000000000000030040205080000000000000000000000000000001008
00102c400000000000000000000000000000300402050800000000000000000000000000
0000100800102c40000000000000000000000000006031fd82051000000007ffff800000
00000001f86013fbee102c80000000630200000000000010002043460204d0c000000180
01800000800800000020274c3610228001c3c0810100000000e1e020002081460204d020
000000c000800001000400000020434c261022800081010200c00000004080400041328a
8408201000000060008000020002000000419494c82041000082030200e00000004100c0
0043f279041c20180000003000000006000300000043f4734e20e1000044020200200000
002600800140000000000008000000180000000400010000024000000000000000440202
002000000026008001400000000000080000001800000004000100000240000000000000
004806023c300ff800280180798000000000000c07fc000e0000c31c39e180f003800000
00000000007006022030000000300180980000000000000c000000070000241c0a618110
000000000000000000700604c030000000300181180000000000000c000000018000381c
34818210000000000000000000b006070030000000500182600000000000000c00000000
8000181c388184e000000000000000000130060500300ff800900183800000000000000c
07fc00008000181c30818700000000000000000002300605003000000310018200000000
0000000c000000010000381c30818400000000000000000004080608d030000004080182
200000000000000c000000060000451c41618420000000000000000004080608d0300000
04080182200000000000000c000000060000451c4161842000000000000000003e7e0208
e02000001f3f0081c0000000000000080000000800018604418103c00000000000000000
0000030000e00000000000c0000000000000001800000010000000060003000000000000
000000000000010000c00000000000400000000000000010000000100000000200020000
000000000000000000000080010000000000002000000000000000200000002000400001
00040000000000000000000000000060020000000000001000000000000000c000000040
00c000008008000000000000000000000000000000000000000000000000000000000000
0000008001c0000000000000000000000000000000000000000000000000000000000000
000000000000008001c00000000000000000000000000000000000000000000000000000
0000000000000000000001ffff8000000000000000000000000000000000000000000000
000000000000000000000000000001ffff80000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000001c00000
000000000000000000000000000000000000000000000000000000000000000000000000
022000000000000000000000000000000000000000000000000000000000000000000000
000000000220000000000000000000000000000000000000000000000000000000000000
0000000000000001f2200000000000000000000000000000000000000000000000000000
000000000000000000000760022000000000000000000000000000000000000000000000
000000000000000000000000000001a1f220000000000000000000000000000000000000
000000000000000000000000000000000000012002200000000000000000000000000000
000000000000000000000000000000000000000000000640022000000000000000000000
0000000000000000000000000000000000000000000000000000066001c0000000000000
000000000000000000000000000000000000000000000000000000000000066001c00000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
end
%%PageTrailer
%%Trailer
%%EOF
