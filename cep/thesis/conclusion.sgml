<sect1><title>Conclusion</title>

<para>
  The GDMS packages offers a suite of time series analysis tools intended for the processing of data from various sources.
  The package was designed and implemented to be as flexible and as platform independent as possible given the time constraints
  under which the group working. We aimed to provide a package which would complement and enhance currently available analysis
  tools. This involved providing time domain analysis, frequency domain analysis, windowing and interpolation functionality.
  The loose object oriented design provides the <command>GDMS</command> with a great deal of flexibility and extensibility. The 
  documentation
  will provide both users and developers with an understanding of exactly how the system was constructed facilitating any
  changes that may be desired.
</para>

<para>
  The success of this project can be measured by a number of factors. Perhaps the first and foremost concern
  in a software application is whether or not it actually works. A significant measure of success,  is whether or not the application 
  achieves was its stated objectives. In the case of the <command>GDMS</command>, we started with a broad requirements description. 
  These requirements were refined as much as possible in the early stages of the project, however, many were undiscovered until much
  later in the development process. Many of these needed to be implemented in order to have a system that would be considered 
  <emphasis>useful</emphasis>. As the deadline drew near, we needed to assess in order of priority, which functionality was 
  essential and which was not. This was largely a role that Professor Peter Morgan played, being the key stakeholder in project.
</para>

<para>
  Having finally implemented a working system, with functionality such that the system was considered <emphasis>useful</emphasis>,
  we have succeeded. A critical point here, is that this system from the very beginning, was always intended to be an evolving
  one, and it would be very unlikey for anyone to implement all possible functionality of a system such as the <command>GDMS</command>
  in the time which we had available. This system is a platform upon which others can build, allowing future
  project groups to improve its functionality. 
</para>

<para>
  A number of valuable lessons have been learned from the GDMS development process, not all of which relate directly
  to application development. That which we consider to be the most critical lesson here, is planning. As previously mentioned,
   the original requirements were broad and did not cover many of the finer details required. It was during our initial requirements
   definition process, that we should have sought to discover as much as possible about exactly what was involved
   with various features in the broad specification. Our mathematical body of knowledge before the project began, was
   considered at least enough to proceed, yet perhaps not quite enough to foresee these finer specification details.
   A more comprehensive requirements definition phases in this project would quite likely have reduced the number of
   problems we had later, with missing or in correct functionality. Having said this, the development of GDMS can be likened
   to a prototyping methodology. It was necessary to consult continuously with Associate Professor Peter Morgan, to ensure
   that project was meeting his requirements.
</para>

<para>
   This consultation was necessary and relevant for all aspects of the system. It is difficult to assign more importance
   to the mathematical functionality or the user interfce, as they are both critical aspects of this project. Of course, the mathematical
   functionality must be correct for the system to be correct. The user interface however, is the vehicle with which we deliver
   feedback and output to the user. The manner in which the UI displays this ouput is critical here. Users of applications such as this one, will be largely made up of people who have been
   using similar tools for a considerable time and an application with a very different look and feel, is not likely
   to be adopted as a useful tool.
</para>

<para>
   Having now completed the first phase of this application's development, we can all say with confidence that our
   knowledge in a number of areas has increased significantly. The first is of course the aforementioned planning.
   Even though all of us have been involved with software development of various kinds in the past, this has highlighted
   the critical importance of the requirements definition process. Having been programming in a Linux envrionment
   for the duration of the project, this too has been an error of exapnsion for our knowledge. This extends of course
   to the programming language itself, C++, various libraries such as that used for the user interface, and many more
   aspects of development. Furthermore, our knowledge of data analysis and processing has benifited here. Not only
   in terms of the theory and processes involved, but also the background, applications and vast significance of the analysis and
   processing of data in order to obtain information.
</para>

</sect1> <!--Conclusion-->


