<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V4.1//EN">
<book><bookinfo>
<title>Geodetic Data Modelling System: Honours Thesis</title>
<subtitle>An online interface</subtitle>
<authorgroup>

<author>
  <firstname>Michael</firstname>
  <surname>Still</surname>
  <affiliation><jobtitle>964076</jobtitle></affiliation>
</author>
</authorgroup>

<abstract><title>Abstract</title>
<para>
TODO
</para>
</abstract>
</bookinfo>

<chapter id="ch01"><title>Introduction</title>
<sect1><title>Motivation</title>
<para>
At the time that the <command>Geodetic Data Modeling System</command> (GDMS) implementation project was initiated, several of the potential users expressed a desire for the application to be available over the Internet. There are a variety of reasons that this type of functionality is enticing -- the main ones for GDMS are that it allows casual users to ability to analyse data, whilst not having to maintain their own copies of the datasets, and it allows users who would normally use the X windows interface to the application to access data whilst <quote>in the field</quote>, or otherwise physically separated from their normal research location.
</para>

<para>
Initially, it was though that a Internet interface to GDMS was outside the achievable scope of the project for 2002. However, as the year progressed, it became clear to me that implementing a Internet interface was indeed achievable, and would add genuinely useful functionality to the application. Hence this honours extension was undertaken.
</para>
</sect1>

<sect1><title>...</title>
<para>
TODO
</para>
</sect1>
</chapter>

<chapter><title>Implementation rationale</title>
<sect1><title>Presentation of the user interface</title>
<para>
In accordance with Internet user interface design best practise, the GDMS Internet interface presents a fully configurable user interface. This is implemented by providing extension tags to those which are available in the standard HTML specification (Raggett, Le Hors, &amp; Jacobs 1999).
</para>

<para>
The GDMS Internet interface follows the recommendations of the most recent HTML specification at the time of development for the insertion of scripting tags into HTML source files (Raggett, Le Hors, &amp; Jacobs 1999). Further documentation on the GDMS Internet interface tags available can be found in Appendix One of this document.
</para>
</sect1>

<sect1><title>Selection of an image format for graph display</title>
<para>
Much though was expended on which image format to use for the plots displayed in the GDMS Internet interface. There are advantages and disadvantages to all the formats available at the time of writing this document. The following formats were considered for the GDMS Internet interface:
</para>

<sect2><title>TIFF</title>
<para>
TIFF (Tagged Image File Format) is a raster (bitmap) image format which was originally produced by Aldus and Microsoft. Aldus was later acquired by Adobe, who manage the 
TIFF specification to this day. At the time of writing, the current version of the TIFF specification is TIFF version 6.0 (Adobe 1992).
</para>

<para>
The main advantage of the TIFF image format is that it is extemely mature. It has a large selection of options to ease the development of imaging software, for example the developer can use which ever endian representation is convenient for them, as well as such fundamental parameters as photometric interpretation (whether a high value is lighter or darker than a low value for a given colour sample within a pixel) (Adobe 1992). There is also a stable, well supported Open Source application programmers interface available to manage creation and interpretation of images within the TIFF format (Warmerdam &amp; Welles 2002). The interface to this library does not frequently change, which is also an advantage for future portability of the GDMS Internet interface.
</para>

<para>
However, some of these very advantages lead to the disadvantages that the TIFF format suffers from. Because the content of the file is so loosely specified, it is quite hard to write an application which can correctly decode all possible TIFF format images. This has resulted in their being only a few high quality TIFF viewing applications being available. The relative difficultly of implementing a TIFF decoder has also resulted in the web browser support for TIFF images being very poor (Bither 2002)
</para>
</sect2>

</sect1>

</chapter>

<chapter><title>Appendix One: GDMS Internet interface scripting elements</title>
<sect1><title>Introduction</title>
<para>
This appendix documents the various tags which are implemented by the GDMS Internet interface in addition to the standard HTML tags normally available. All of these tags are within the scripting namespace provided by HTML 4.01 (Raggett, Le Hors, &amp; Jacobs 1999).
</para>

<sect2><title>commands</title>
<para>
This tag will display a menu of the commands available in the current context -- for example, when the Internet interface first starts, it will list the open command. Commands which are not available, but are normally available will appear in a disabled style. This results in a list of commands which is consistent, and therefore reduces the potential for user confusion.
</para>

<para>
An example use is as follows:
</para>

<programlisting>
&amp;{commands};
</programlisting>

<para>
The display of the command menu is altered by the following configuration file entries:
</para>

<itemizedlist>
<listitem><para><emphasis>commandentry</emphasis>: this HTML snippet is used for enabled commands</para></listitem>
<listitem><para><emphasis>discommandentry</emphasis>: this HTML snippet is used for disabled commands</para></listitem>
</itemizedlist>

<para>
For example, these configuration entries ship by default with the GDMS Internet interface:
</para>

<programlisting>
# This line is simple HTML used for format the command entries,
# %s is the name of the command (including link HTML)
$commandentry = "&lt;tr&gt;&lt;td bgcolor=\"AAAAAA\"&gt;%s&lt;/td&gt;&lt;tr&gt;";

# This line is used for commands which aren't available...
$discommandentry = "&lt;tr&gt;&lt;td bgcolor=\"EEEEEE\"&gt;
  &lt;font color=\"777777\"&gt;%s&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;";
</programlisting>
</sect2>
<sect2><title>dataset</title>
<para>
This tag will display the name of the current dataset, if one is open.
</para>

<para>
An example usage is:
</para>

<programlisting>
&amp;{dataset};
</programlisting>

<para>
The dataset name is the portion of the filename before the extensions .dat1, .dat2, and .dat3 are applied. For example <emphasis>mb_AUCK_GPS</emphasis> is a dataset name.
</para>
</sect2>
<sect2><title>datasets</title>
<para>
This tag will display a list of the datasets available in the dataset directory.
</para>

<para>
An example usage is:
</para>

<programlisting>
&amp;{datasets};
</programlisting>

<para>
The dataset directory is configured with the following configuration file entry:
</para>

<programlisting>
# This line defines where the datsets are stored
$datasets = "/home/httpd/gdms-datasets/";
</programlisting>

<para>
There are also several configuration options which alter the appearance of the list of datasets available. These are:
</para>

<itemizedlist>
<listitem><para><emphasis>selectstart</emphasis>: this is used for any output which should appear at the begining of the list. This could include HTML tags for the creation of the required list markup (for example tables).</para></listitem>
<listitem><para><emphasis>selectentry</emphasis>: this configuration item is used for each entry in the list. The special text <command>%s</command> is replaced by the HTML for the entry itself.</para></listitem>
<listitem><para><emphasis>selectend</emphasis>: this is used for any HTML required to finalize the list.</para></listitem>
</itemizedlist>

<programlisting>
# This is used for selection lists (for instance datasets)
$selectstart = "List start";
$selectentry = "&lt;LI&gt;%s";
$selectend = "List end";
</programlisting>
</sect2>
<sect2><title>eastplot</title>
<para>
This tag will insert the HTML and required URL for the East direction plot from the current dataset. The output of the tag will be empty if there is no currently selected dataset. The plots are 24 bit colour PNG images, as discussed in the implementation methodology section of this document.
</para>

<para>
An example usage is:
</para>

<programlisting>
&amp;{eastplot};
</programlisting>
</sect2>
<sect2><title>motd</title>
<para>
This tag will display a welcome message to the user -- the Message Of The Day (MOTD). This can be used to inform users of new datasets now being available, planned system outages, and other such informational messages.
</para>

<para>
An example usage is:
</para>

<programlisting>
&amp;{motd};
</programlisting>
</sect2>
<sect2><title>northplot</title>
<para>
This tag will insert the HTML and required URL for the North direction plot from the current dataset. The output of the tag will be empty if there is no currently selected dataset. The plots are 24 bit colour PNG images, as discussed in the implementation methodology section of this document.
</para>

<para>
An example usage is:
</para>

<programlisting>
&amp;{northplot};
</programlisting>
</sect2>
<sect2><title>upplot</title>
<para>
This tag will insert the HTML and required URL for the Up direction plot from the current dataset. The output of the tag will be empty if there is no currently selected dataset. The plots are 24 bit colour PNG images, as discussed in the implementation methodology section of this document.
</para>

<para>
An example usage is:
</para>

<programlisting>
&amp;{upplot};
</programlisting>
</sect2>

</sect1>
</chapter>

<chapter><title>Appendix Two: Source code</title>
<programlisting>
#!/usr/bin/perl

# GDMS web broker
# Copyright (C) Michael Still             2002
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#  
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#  
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

# This is the broker between the GDMS code and the CGI server. It's role is to
# parse templates, execute requests, and cache results for speedy processing
# next time that request is seen...
use strict;
use CGI;

my($result, $command, $TEMP);

# Variables set by the config file
my($templates, $datasets, $commandentry, $discommandentry, $selectstart, $selectentry, $selectend, $plotcache, $tmpdir, $rooturl, $ploturl, $gdms, $temp);

# Setup the CGI module
$result = new CGI();
print $result-&gt;header;

# Read in the config file
eval `cat gdms.config` or die "GDMS web could not read it's config file: $@";
print STDERR "Working directory is: ".`pwd`;
$temp = $gdms;
$temp =~ s/\/.*$//;
print STDERR "Changing to: $temp\n";

# Determine what page we are accessing
$command = $result-&gt;param('command');
if($command eq ""){
    $command = "main";
}

# Determine if the GDMS script for this page exists already (

print processTemplate("$templates/$command.html");
exit;



###############################################################################
# Find the template file, and then parse it
sub processTemplate(){
    my($file) = @_;
    my($pre, $post, $cmd, $output, $len, $line);

    # This local usage is used to make the TEMPLATE filehandle local to this
    # subroutine...
    local *TEMPLATE;
    print STDERR "Processing template file: $file\n";

    $output = "";
    open TEMPLATE, "&lt; $file" or
	die "GMDS web could not open the template file $file";
    while(&lt;TEMPLATE&gt;){
	# Repeatedly process a line until there are not more template commands
	$line = $_;
	$len = -1;

	while($len != length($line)){
	    $len = length($_);

	    # todo: there must be a better way of doing this...
	    $_ = $line;
	    if(/(.*)&amp;{([^%]*)};(.*)/){
		$pre = $1;
		$cmd = $2;
		$post = $3;
		
		if($cmd eq "commands"){
		    # List the available commands
		    $line = $pre.getCommands().$post;
		}
		elsif($cmd eq "dataset"){
		    # The name of the current dataset
		    $line = $pre.$result-&gt;param('dataset').$post;
		}
		elsif($cmd eq "datasets"){
		    # List the datasets in the dataset directory
		    my($temptotal, $tempfile);
		    $temptotal = "";

		    print STDERR "Getting datasets from $datasets\n";
		    open TEMP, "find $datasets -type f -name \"*.dat1\" |";
		    while(&lt;TEMP&gt;){
			my($linecount);
			$tempfile = $_;
			$tempfile =~ s/$datasets\/*//;
			$tempfile =~ s/.dat1\n$//;

			$linecount = `cat $datasets/$tempfile.dat1 | wc -l`;
			$temptotal = $temptotal.
			    substHTML($selectentry, 
				      "&lt;a href=\"$rooturl?command=main&amp;dataset=$tempfile\"&gt;$tempfile&lt;\/a&gt; ".
				      "($linecount lines)");
		    }
		    close TEMP;

		    $line = $pre.$temptotal.$post;
		}
		elsif($cmd eq "motd"){
		    # Output a message of the day
		    $line = $pre.processTemplate("$templates/motd.html").$post;
		}
		elsif($cmd eq "northplot"){
		    # A plot in the X direction
		    print STDERR "Plotting in x direction\n";
		    $line = $pre.generateAndLink("x").$post;
		}
		elsif($cmd eq "eastplot"){
		    # A plot in the Y direction
		    $line = $pre.generateAndLink("y").$post;
		}
		elsif($cmd eq "upplot"){
		    # A plot in the Z direction
		    $line = $pre.generateAndLink("z").$post;
		}
	    }
	}
	
	# And now we can print out the resultant line
	$output = $output.$line;
    }

    return $output;
}

# Determine what commands should be available at this time
sub getCommands(){
    my($output, $temp);

    $output = "";
    if($result-&gt;param('dataset') eq ""){
	# Dataset open / close
	$output = $output.substHTML($commandentry, "&lt;a href=\"$rooturl?command=open\"&gt;Open&lt;\/a&gt;");
	$output = $output.substHTML($discommandentry, "Close");
	
	# Plotting
	$output = $output.substHTML($discommandentry, "Plot");
    }
    else{
	# Datset open / close
	$output = $output.substHTML($discommandentry, "Open");
	$output = $output.substHTML($commandentry, "&lt;a href=\"$rooturl?command=main\"&gt;Close&lt;\/a&gt;");

	# Plotting
	if($result-&gt;param('command') eq "plot"){
	    $output = $output.substHTML($discommandentry, "Plot");
	}
	else{
	    $output = $output.substHTML($commandentry, "&lt;a href=\"$rooturl?command=plot&amp;dataset=".
					$result-&gt;param('dataset')."\"&gt;Plot&lt;/a&gt;");
	}
    }

    return $output;
}

# Substitute into the HTML stub from the config file
sub substHTML(){
    my($html, $insert) = @_;
    my($temp);

    $temp = $html;
    $temp =~ s/%s/$insert/;
    return $temp;
}

# This subroutine deals with generating plots as required and then outputs
# the HTML needed to link to that image
sub generateAndLink(){
    my($dir) = @_;
    my($file, $unique);
    local *COMMANDS;

    print STDERR "Started generateAndLink()\n";

    # Generate the filename
    $unique = "$$-".time()."-".rand();
    $file = "$plotcache/".$result-&gt;param('dataset')."-$dir.png";

    print STDERR "Filename is: $file\n";

    if(! -f $file){
	# We need to generate the image
	print STDERR "Plot cache miss for ".$result-&gt;param('dataset')." ($dir)\n";
	open COMMANDS, "&gt; $tmpdir/gdms-$unique.cmd" or 
	    die "Could not open temporary file $tmpdir/gdms-$unique.cmd\n";
	print COMMANDS "open $datasets/".$result-&gt;param('dataset')."\n";
	print COMMANDS "plot $dir $file\n";
	close COMMANDS;

	# Execute the gdms main program with this command script
	`$gdms -b $tmpdir/gdms-$unique.cmd` or 
	    die "GDMS execution error for: $gdms -b $tmpdir/gdms-$unique.cmd";
	print STDERR "Return code as $?\n";
    }
    
    # Now link to that image
    return "&lt;img src=\"$ploturl/".$result-&gt;param('dataset')."-$dir.png\"&gt;";
}
</programlisting>
<para><emphasis>Code: eps</emphasis></para>
</chapter>

<chapter><title>Appendix Three: A sample configuration file</title>
<programlisting>
###############################################################################
# Directories
###############################################################################

# This line defines where the templates are stored
$templates = "/home/httpd/gdms-templates/";

# This line defines where the datsets are stored
$datasets = "/home/httpd/gdms-datasets/";

###############################################################################
# HTML configuration
###############################################################################

# This line is simple HTML used for format the command entries, %s is the name
# of the command (including link HTML)
$commandentry = "&lt;tr&gt;&lt;td bgcolor=\"AAAAAA\"&gt;%s&lt;/td&gt;&lt;tr&gt;";

# This line is used for commands which aren't available...
$discommandentry = "&lt;tr&gt;&lt;td bgcolor=\"EEEEEE\"&gt;&lt;font color=\"777777\"&gt;%s&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;";

# This is used for selection lists (for instance datasets)
$selectstart = "List start";
$selectentry = "&lt;LI&gt;%s";
$selectend = "List end";

###############################################################################
# Caching configuration
###############################################################################

# This is the location of the plot cache -- it can get quite big
$plotcache = "/home/httpd/html/gdms-plots/";
$ploturl = "/gdms-plots/";

# Location for temporary files
$tmpdir = "/home/httpd/gdms-temp/";

###############################################################################
# Other
###############################################################################

# This is the root URL
$rooturl = "/cgi-bin/gdms.pl";

# This is the full path to the GDMS application
$gdms = "/home/httpd/gdms";
</programlisting>
<para><emphasis>Code: eps</emphasis></para>
</chapter>

<chapter><title>Appendix Four: References</title>
<sect1><title>References</title>
<para>
Adobe, 3 June 1992, 
<emphasis>TIFF Revision 6.0</emphasis>, 
[Online] http://partners.adobe.com/asn/developer/pdfs/tn/TIFF6.pdf
</para>

<para>
Raggett, D., Le Hors, A., Jacobs, I., 24 December 1999 [last update], 
<emphasis>HTML 4.01 Specification</emphasis>, 
[Online] Available: http://www.w3.org/TR/html4/
</para>

<para>
Bither, B., [Last accessed] November 2002,
<emphasis>Benefits of the PNG Image Format</emphasis>,
[Online] Available: http://www.atalasoft.com/png.asp
</para>

<para>
Warmerdam, F. and Welles, M., 24 January 2002 [last update],
<emphasis>The libtiff home page</emphasis>,
[Online] http://www.libtiff.org/
</para>

</sect1>
</chapter>
</book>
