// todo_mikal: someone shouldn't have imported this comment
// Use this docbook comment at the start of a class in the header file to have
// a man page generated automatically for the class...

/******************************************************************************
DOCBOOK START

FUNCTION cepConfiguration
PURPOSE store user definable configuration information

SYNOPSIS START
cepConfiguration::cepConfiguration(string& persistFile);

SYNOPSIS END

DESCRIPTION START
This class stores user definable configuration information such as the size of the main window on startup. It is implemented using <command>trivsql</command>, a trivial SQL implementation from Michael Still (mikal@stillhq.com).
</para>

<para>
<command>cepConfiguration (const string&amp; filename);</command>
Constructor, <command>filename</command> defines the location of the configuration database. One will be created if there is no database at this location already.
</para>

<para>
<command>cepError getValue(const string&amp; valkey, const string&amp; defval, string&amp; outval);</command>
Get a string value from the configuration database. <command>valkey</command> defines the unique keyname for this value, and <command>defval</command> defines the default value to be used if a value isn't found in the database. If the database lacks a value for this key, then the default value is also written into the database for next time.
</para>

<para>
<command> cepError getValue(const string&amp; valkey, const bool&amp; defval, bool&amp; outval);</command>
The same as the string version of <command>getValue</command>, but with a bool value.
</para>

<para>
<command>cepError getValue(const string&amp; valkey, const int&amp; defval, int&amp; outval);</command>
The same as the string version of <command>getValue</command>, but with an int value.
</para>

<para>
<command>cepError setValue(const string&amp; valkey, const string&amp; value);</command>
Set a string value in the configuration database with key <command>valkey</command> to the value <command>value</command>.
</para>

<para>
<command>cepError setValue(const string&amp; valkey, const int&amp; value);</command>
The same as the string version of <command>setValue</command>, but for an int.
</para>

<para>
<command>cepError setValue(const string&amp; valkey, const bool&amp; value);</command>
The same as the string version of <command>setValue</command>, but for a bool.
DESCRIPTION END

DOCBOOK END
******************************************************************************/
