#!/usr/bin/perl

# This program takes the kernel source and webifies it
use strict;
use CGI;
use DBI;

my($result, $mode, $page, $line, $annot, $word, $path);
my($database, $select, @data);
my($CFILES, $HTMLFILE);
my($inputfullfile, $inputfile, $directory, $outfile);
my($bodyfound, $line, $count, $srcdir, $icon);
my($filehash, $ano, $cmd, $subdir);

$path = "/usr/src/";

$result = new CGI();
$mode = $result->param('mode');
$page = $result->param('page');
$line = $result->param('line');
$annot = $result->param('annot');
$word = $result->param('word');
$srcdir = $result->param('src');
$subdir = $result->param('sub');

print $result->header;
print $result->start_html(-title=>"lin-annot");

# If we don't have a source directory, then prompt with the available options
if($srcdir eq ""){
  print "No codebase specified. Please select:<BR><BR><ul>";
  open CFILES, "ls $path |";
  while(<CFILES>){
    chomp;

    if(/^linux-.*/){
      if(-d "$path/$_"){
	print "<li><a href=\"/cgi-bin/lin-annot?src=$_\">$_</a>";
      }
    }
  }
  exit;
}

# Otherwise, we have a source directory
$database = DBI->connect("DBI:mysql:database=linux:host=localhost", "root", "vodka4me", { PrintError => 0 });

if(!defined($database)){
    print "Database connection failed" . DBI->errstr;
    exit;
}

if($mode eq ""){
    print "<H1>Source code from $srcdir$subdir/</H1><BR>\n";

    print "<table bgcolor=\"BBBBBB\" width=\"100%\"><tr>\n";
    $count = 0;

    open CFILES, "ls -F $path/$srcdir/$subdir |";
    while(<CFILES>){
	chomp;
	
	# todo_mikal: there must be a better way
	$inputfullfile = $_;
	s/\/[^\/]*$//;
	$directory = $_;
	$_ = $inputfullfile;
	s/^.*\///;
	$inputfile = $_;
	$outfile = "$inputfile.html";
	
	if($count % 5 == 0){
	    print "</tr><tr>\n";
	}

       	if(substr($inputfullfile, length($inputfullfile) - 1, length($inputfullfile)) eq "/"){
	    # Directory
	    $inputfullfile =~ s/\/$//;
	    print "<td width=\"20%\"><BR><a href=\"/cgi-bin/lin-annot?src=$srcdir&sub=$subdir/$inputfullfile\">";
	    print "<center><img src=\"/mikalicons/folder.jpg\"><BR><BR><B>$inputfullfile</b></center></a><BR></td>\n";
	}
	else{
	    # We highlight based on file extension
	    $icon="unknown.jpg";
	    if(substr($inputfullfile, length($inputfullfile) - 2, length($inputfullfile)) eq ".c"){
		$icon="source_c.jpg";
	    }
	    elsif(substr($inputfullfile, length($inputfullfile) - 2, length($inputfullfile)) eq ".h"){
		$icon="source_h.jpg";
	    }
	    elsif(substr($inputfullfile, length($inputfullfile) - 2, length($inputfullfile)) eq ".o"){
		$icon="source_o.jpg";
	    }

	    $inputfullfile =~ s/[\*\/]$//;
	    print "<td width=\"20%\"><BR><a href=\"/cgi-bin/lin-annot?src=$srcdir&mode=display&sub=$subdir&page=";
	    print "$inputfullfile\"><center><img src=\"/mikalicons/$icon\"><BR><BR><b>$inputfullfile</b></center></a><BR></td>\n";
	}

	$count++;
    }

    print "</tr></table>\n";
}
elsif($mode eq "display"){
    dostuff($srcdir, $page, 1);
}
elsif($mode eq "addannot"){
    print "Adding an annotation for $page: $line\n<BR><BR>\n";

    print $result->start_form(-action=>"/cgi-bin/lin-annot#line-" . ($line - 5) );
    print $result->input({-type=>'hidden', -name=>'mode', -value=>"insert"});
    print $result->input({-type=>'hidden', -name=>'page', -value=>$page});
    print $result->input({-type=>'hidden', -name=>'line', -value=>$line});
    print $result->input({-type=>'hidden', -name=>'dir', -value=>$srcdir});

    $select = $database->prepare("SELECT annot FROM annotations WHERE file = '$page' AND line = $line ORDER BY ano DESC");
    if(!defined($select)){
	print "Could not arrange select";
	$database->disconnect();
	exit;
    }

    # Results?
    $select->execute() or die "Could not execute select" . $select->errstr;
    if($select->rows > 0){
	@data = $select->fetchrow_array();
	}

    print $result->textarea({-rows=>20, -cols=>100, -wrap=>'physical', -name=>"annot", -default=>$data[0]});
    print "<BR><BR>\n";
    print "Define this anchor word: ";
    print $result->textfield({-name=>"word"});
    print "<BR><BR>\n";
    print $result->submit(-value=>" Are you sure? ", -name=>"commit");
}
elsif($mode eq "insert"){
    $_ = $annot;
    s/\'/\'\'/g;
    $annot = $_;

    $filehash = `/usr/bin/md5sum $path/$srcdir/$subdir/$page | cut -f 1 -d " "`;
    $select = $database->prepare("INSERT INTO annotations (file, line, annot, md5) VALUES ('$page', $line, '$annot', '$filehash')");
    if(!defined($select)){
	print "Could not arrange select";
	$database->disconnect();
	exit;
    }
    
    $select->execute() or die "Could not execute select" . $select->errstr;
    print "<I>File hash (md5sum $path/$srcdir/$subdir/$page): $filehash<BR>Defined the annotation</i><br>\n";

    if($word ne ""){
	$select = $database->prepare("INSERT INTO words (word, file, line) VALUES ('$word', '$page', $line)");
	if(!defined($select)){
	    print "Could not arrange select";
	    $database->disconnect();
	    exit;
	}
	
	$select->execute() or die "Could not execute select" . $select->errstr;
	print "<I>Defined the word</i><br>\n";
    }

    dostuff($srcdir, $page, 1);
}
elsif($mode eq "edit"){
    $ano = $result->param("ano");
    $cmd = $result->param("cmd");

    $select = $database->prepare("SELECT annot, file, line FROM annotations WHERE ano = $ano");
    if(!defined($select)){
	print "Could not arrange select";
	$database->disconnect();
	exit;
    }
    
    # Results?
    $select->execute() or die "Could not execute select" . $select->errstr;
    if($select->rows > 0){
	@data = $select->fetchrow_array();

	$filehash = `/usr/bin/md5sum $path/$srcdir/$subdir/$data[1] | cut -f 1 -d " "`;
	if($filehash eq ""){
	    print "Could not generate a hash";
	    exit;
	}

	$data[0] =~ s/\'/\'\'/g;
	if($cmd eq "import"){
	    $select = $database->prepare("INSERT INTO annotations (file, line, annot, md5) VALUES ('$data[1]', '$data[2]', '$data[0]', '$filehash')");
	}
	elsif($cmd eq "delete"){
	    $select = $database->prepare("INSERT INTO annotations (file, line, annot, md5) VALUES ('$data[1]', '$data[2]', '', '$filehash')");
	}
	else{
	    print "Unknown command";
	    exit;
	}

	if(!defined($select)){
	    print "Could not arrange select";
	    $database->disconnect();
	    exit;
	}
	
	# Results?
	$select->execute() or die "Could not execute insert" . $select->errstr;
    }

    print "<i>Annotation modified</i><BR>\n";
    # todo_mikal: there is a bug in how do stuff deals with the redraw. I am not sure why.
    dostuff($srcdir, $data[1], 1);
}

print $result->end_html;
exit;

######################################################################################################################################

sub dostuff(){
    my($srcdir, $filename, $doMarkup) = @_;
    my($word, $textline, %hotwords, $rawword, $file, %annotations, %anos);

    if($doMarkup == 0){
      print "[code2html refused to markup input file]<BR>";
    }
    else{
      print "[Marking up file with code2html]<BR>";
      }

    $file = "$filename";
    $file =~ s/\/\//\//g;
    $filehash = `/usr/bin/md5sum $path/$srcdir/$subdir/$page | cut -f 1 -d " "`;

    ###############################################
    # Build a list of all hot words
    $select = $database->prepare("SELECT word, file, line FROM words");
    if(!defined($select)){
	print "Could not arrange select";
	$database->disconnect();
	exit;
    }

    $select->execute() or die "Could not execute select" . $select->errstr;
    if($select->rows > 0){
	while(@data = $select->fetchrow_array()){
	    $hotwords{$data[0]} = "/cgi-bin/lin-annot?src=$srcdir&mode=display&page=$data[1]#line-$data[2]";
	}
    }

    ###############################################
    # Annotations
    print STDERR "SELECT line, annot, ano FROM annotations WHERE file = '$file' AND md5 = '$filehash'";
    $select = $database->prepare("SELECT line, annot, ano FROM annotations WHERE file = '$file' AND md5 = '$filehash'");
    if(!defined($select)){
	print "Could not arrange select";
	$database->disconnect();
	exit;
    }

    $select->execute() or die "Could not execute select" . $select->errstr;
    if($select->rows > 0){
      print STDERR "Found annotations against this version\n";

      # Don't display the "there are x annotations" message if we are going
      # through here again after a failed markup...
      if($doMarkup == 1){
	print "There are " . $select->rows . " annotations against this file<BR>\n";
      }

	while(@data = $select->fetchrow_array()){
	    print STDERR "Loaded annotation: \"$data[0]\", \"$data[1]\", \"$data[2]\"\n";
	    $annotations{$data[0]} = $data[1];
	    $anos{$data[0]} = $data[2];
	}
    }

    $select = $database->prepare("SELECT line, annot, ano FROM annotations WHERE file = '$file'");
    if(!defined($select)){
	print "Could not arrange select";
	$database->disconnect();
	exit;
    }

    $select->execute() or die "Could not execute select" . $select->errstr;
    if($select->rows > 0){
      print STDERR "Found annotations against another version\n";

      # Again, don't tell people twice
      if($doMarkup == 1){
	print "There are " . $select->rows . " annotations against other versions of this file<BR>\n";
      }

	while(@data = $select->fetchrow_array()){
	    if($anos{$data[0]} eq ""){
		print STDERR "Loaded old annotation: \"$data[0]\", \"$data[1]\", \"$data[2]\"\n";
		$annotations{$data[0]} = "OLD~" . $data[1];
		$anos{$data[0]} = $data[2];
	    }
	}
    }

    ###############################################
    # Now we go through and post process this to add the links for comments
    $bodyfound = 0;
    if($doMarkup == 1){
	print STDERR "code2html \"$path/$srcdir/$subdir/$file\"\n";
	open HTMLFILE, "code2html \"$path/$srcdir/$subdir/$file\" 2> /dev/null |" or die "Couldn't open";
    }
    else{
	print "<html><body><pre>";
	open HTMLFILE, "cat $path/$srcdir/$subdir/$file | sed -e 's/</\\&lt;/g' -e 's/>/\\&gt;/g' |" or die "Couldn't open";
	$bodyfound = 1;
    }

    $line = 1;
    while(<HTMLFILE>){
	chomp;

	if($bodyfound == 1){
	    print "<a name=\"line-$line\"><a href=\"/cgi-bin/lin-annot?src=$srcdir&mode=addannot&page=$file&line=$line\"><img src=\"/linux/linplus.gif\"></a>&nbsp;";

	    # todo_mikal: linux space convention
	    s/\t/       /g;
	    markwords($_, %hotwords);

	    if($annotations{$line} ne ""){
		if($annotations{$line} =~ /OLD~(.*)/){
		    print "<div align=right>";
		    print "<table width=\"60%\"><tr><td width=\"20%\" bgcolor=\"BB4444\">";
		    print "<a href=\"/cgi-bin/lin-annot?src=$srcdir&mode=edit&ano=".$anos{$line}."&cmd=import\">Import</a><br>";
		    print "<a href=\"/cgi-bin/lin-annot?src=$srcdir&mode=edit&ano=".$anos{$line}."&cmd=delete\">Delete</a><br>";
		    print "<td bgcolor=\"BB4444\"><i><b>This annotation comes from a different version of this source file. There are several operations you can perform on this annotation...</b></i><BR><BR>";
		    print "$1</td></tr>";
		    print "</table></div>";
		}
		else
		{
		    print "<div align=right>";
		    print "<table width=\"60%\"><tr><td bgcolor=\"FFBB19\">";
		    print $annotations{$line}."</td></tr></table></div>";
		}
	    }
	    print "\n";
	}
	else{
	    print "<pre>$_</pre>\n";
	}

	if(/<body/){
	    $bodyfound = 1;
	}
	if(/<hr>/){
	    $bodyfound = 0;
	}

	if(/<\/body>/){
	    print "<BR>Annotated by lin-annot <a href=\"http://www.stillhq.com/cgi-bin/getpage?area=linux&page=annot\">http://www.stillhq.com/cgi-bin/getpage?area=linux&page=annot</a><BR>\n";
	    print "Generation of this page took " . (time - $^T) ." second(s).</i>";
	}

	$line++;
    }

    # If we didn't see many lines, then things didn't work out...
    if($line < 2){
	dostuff($srcdir, $filename, 0);
    }

    if($doMarkup == 0){
	print "</pre></body></html>";
    }
}

# Provide syntax highlighting for words known to the annotation system
sub markwords(){
    my($line, %hotwords) = @_;
    my($trailer);

    # Loop through the line forever (almost)
    while($line ne ""){
	# Pull tags off the front
	if($line =~ /(^<[^>]*>)(.*)/){
	    print $1;
	    $line = $2;
	}
	elsif($line =~ /^([^<]*)(.*)/){
	    if($hotwords{$1} ne ""){
		print "<a href=\"$hotwords{$1}\">$1</a>";
	    }
	    else{
		print "$1";
	    }

	    $line = $2;
	}
	else{
	    print $line;
	    $line = "";
	}
    }
}
