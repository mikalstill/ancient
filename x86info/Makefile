# Makefile.in generated by automake 1.7.3 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = .

pkgdatadir = $(datadir)/x86info
pkglibdir = $(libdir)/x86info
pkgincludedir = $(includedir)/x86info
top_builddir = .

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
ACLOCAL = ${SHELL} /home/mikal/opensource/x86info/config/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/mikal/opensource/x86info/config/missing --run tar
AUTOCONF = ${SHELL} /home/mikal/opensource/x86info/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/mikal/opensource/x86info/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/mikal/opensource/x86info/config/missing --run automake-1.7
AWK = gawk
CC = gcc
CCAS = $(CC)
CCASFLAGS = $(CFLAGS)
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"x86info\" -DVERSION=\"1.11\" -DHAVE_LIBM=1 -DSTDC_HEADERS=1 -D_GNU_SOURCE=1 
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/mikal/opensource/x86info/config/missing --run makeinfo
OBJEXT = o
PACKAGE = x86info
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 1.11
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build_alias = 
datadir = ${prefix}/share
exec_prefix = ${prefix}
host_alias = 
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/mikal/opensource/x86info/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
bin_PROGRAMS = x86info
COMMONSOURCES = AMD/MSR-Athlon.c AMD/MSR-K6.c AMD/amd_bluesmoke.c AMD/amd_identify.c Cyrix/cyrix_identify.c IDT/MSR-C3.c IDT/idt_identify.c Intel/intel_bluesmoke.c Intel/cachesize.c Intel/eblcr.c Intel/intel_identify.c MHz.c NatSemi/natsemi_identify.c RiSE/rise_identify.c binary.c connector.c cpuid.c features.c get_model_name.c havecpuid.c identify.c mptable.c mtrr.c rdmsr.c x86info.c cpuid_UP.S
x86info_SOURCES = $(COMMONSOURCES) main.c
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_CLEAN_FILES =
bin_PROGRAMS = x86info$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am__objects_1 = MSR-Athlon.$(OBJEXT) MSR-K6.$(OBJEXT) \
	amd_bluesmoke.$(OBJEXT) amd_identify.$(OBJEXT) \
	cyrix_identify.$(OBJEXT) MSR-C3.$(OBJEXT) \
	idt_identify.$(OBJEXT) intel_bluesmoke.$(OBJEXT) \
	cachesize.$(OBJEXT) eblcr.$(OBJEXT) intel_identify.$(OBJEXT) \
	MHz.$(OBJEXT) natsemi_identify.$(OBJEXT) \
	rise_identify.$(OBJEXT) binary.$(OBJEXT) connector.$(OBJEXT) \
	cpuid.$(OBJEXT) features.$(OBJEXT) get_model_name.$(OBJEXT) \
	havecpuid.$(OBJEXT) identify.$(OBJEXT) mptable.$(OBJEXT) \
	mtrr.$(OBJEXT) rdmsr.$(OBJEXT) x86info.$(OBJEXT) \
	cpuid_UP.$(OBJEXT)
am_x86info_OBJECTS = $(am__objects_1) main.$(OBJEXT)
x86info_OBJECTS = $(am_x86info_OBJECTS)
x86info_LDADD = $(LDADD)
x86info_DEPENDENCIES =
x86info_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/MHz.Po ./$(DEPDIR)/MSR-Athlon.Po \
	./$(DEPDIR)/MSR-C3.Po ./$(DEPDIR)/MSR-K6.Po \
	./$(DEPDIR)/amd_bluesmoke.Po \
	./$(DEPDIR)/amd_identify.Po ./$(DEPDIR)/binary.Po \
	./$(DEPDIR)/cachesize.Po ./$(DEPDIR)/connector.Po \
	./$(DEPDIR)/cpuid.Po ./$(DEPDIR)/cyrix_identify.Po \
	./$(DEPDIR)/eblcr.Po ./$(DEPDIR)/features.Po \
	./$(DEPDIR)/get_model_name.Po \
	./$(DEPDIR)/havecpuid.Po ./$(DEPDIR)/identify.Po \
	./$(DEPDIR)/idt_identify.Po \
	./$(DEPDIR)/intel_bluesmoke.Po \
	./$(DEPDIR)/intel_identify.Po ./$(DEPDIR)/main.Po \
	./$(DEPDIR)/mptable.Po ./$(DEPDIR)/mtrr.Po \
	./$(DEPDIR)/natsemi_identify.Po \
	./$(DEPDIR)/rdmsr.Po ./$(DEPDIR)/rise_identify.Po \
	./$(DEPDIR)/x86info.Po
CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(x86info_SOURCES)
DIST_COMMON = README AUTHORS COPYING ChangeLog INSTALL Makefile.am \
	Makefile.in NEWS TODO aclocal.m4 config/depcomp \
	config/install-sh config/ltconfig config/missing \
	config/mkinstalldirs configure configure.in
SOURCES = $(x86info_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .S .c .o .obj

am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno
$(srcdir)/Makefile.in: # Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)

$(top_builddir)/config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
$(srcdir)/configure: # $(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

$(ACLOCAL_M4): # configure.in 
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
x86info$(EXEEXT): $(x86info_OBJECTS) $(x86info_DEPENDENCIES) 
	@rm -f x86info$(EXEEXT)
	$(LINK) $(x86info_LDFLAGS) $(x86info_OBJECTS) $(x86info_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/MHz.Po
include ./$(DEPDIR)/MSR-Athlon.Po
include ./$(DEPDIR)/MSR-C3.Po
include ./$(DEPDIR)/MSR-K6.Po
include ./$(DEPDIR)/amd_bluesmoke.Po
include ./$(DEPDIR)/amd_identify.Po
include ./$(DEPDIR)/binary.Po
include ./$(DEPDIR)/cachesize.Po
include ./$(DEPDIR)/connector.Po
include ./$(DEPDIR)/cpuid.Po
include ./$(DEPDIR)/cyrix_identify.Po
include ./$(DEPDIR)/eblcr.Po
include ./$(DEPDIR)/features.Po
include ./$(DEPDIR)/get_model_name.Po
include ./$(DEPDIR)/havecpuid.Po
include ./$(DEPDIR)/identify.Po
include ./$(DEPDIR)/idt_identify.Po
include ./$(DEPDIR)/intel_bluesmoke.Po
include ./$(DEPDIR)/intel_identify.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/mptable.Po
include ./$(DEPDIR)/mtrr.Po
include ./$(DEPDIR)/natsemi_identify.Po
include ./$(DEPDIR)/rdmsr.Po
include ./$(DEPDIR)/rise_identify.Po
include ./$(DEPDIR)/x86info.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.S.o:
	$(CCASCOMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.S.obj:
	$(CCASCOMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

MSR-Athlon.o: AMD/MSR-Athlon.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT MSR-Athlon.o -MD -MP -MF "$(DEPDIR)/MSR-Athlon.Tpo" \
	  -c -o MSR-Athlon.o `test -f 'AMD/MSR-Athlon.c' || echo '$(srcdir)/'`AMD/MSR-Athlon.c; \
	then mv "$(DEPDIR)/MSR-Athlon.Tpo" "$(DEPDIR)/MSR-Athlon.Po"; \
	else rm -f "$(DEPDIR)/MSR-Athlon.Tpo"; exit 1; \
	fi
#	source='AMD/MSR-Athlon.c' object='MSR-Athlon.o' libtool=no \
#	depfile='$(DEPDIR)/MSR-Athlon.Po' tmpdepfile='$(DEPDIR)/MSR-Athlon.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o MSR-Athlon.o `test -f 'AMD/MSR-Athlon.c' || echo '$(srcdir)/'`AMD/MSR-Athlon.c

MSR-Athlon.obj: AMD/MSR-Athlon.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT MSR-Athlon.obj -MD -MP -MF "$(DEPDIR)/MSR-Athlon.Tpo" \
	  -c -o MSR-Athlon.obj `if test -f 'AMD/MSR-Athlon.c'; then $(CYGPATH_W) 'AMD/MSR-Athlon.c'; else $(CYGPATH_W) '$(srcdir)/AMD/MSR-Athlon.c'; fi`; \
	then mv "$(DEPDIR)/MSR-Athlon.Tpo" "$(DEPDIR)/MSR-Athlon.Po"; \
	else rm -f "$(DEPDIR)/MSR-Athlon.Tpo"; exit 1; \
	fi
#	source='AMD/MSR-Athlon.c' object='MSR-Athlon.obj' libtool=no \
#	depfile='$(DEPDIR)/MSR-Athlon.Po' tmpdepfile='$(DEPDIR)/MSR-Athlon.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o MSR-Athlon.obj `if test -f 'AMD/MSR-Athlon.c'; then $(CYGPATH_W) 'AMD/MSR-Athlon.c'; else $(CYGPATH_W) '$(srcdir)/AMD/MSR-Athlon.c'; fi`

MSR-K6.o: AMD/MSR-K6.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT MSR-K6.o -MD -MP -MF "$(DEPDIR)/MSR-K6.Tpo" \
	  -c -o MSR-K6.o `test -f 'AMD/MSR-K6.c' || echo '$(srcdir)/'`AMD/MSR-K6.c; \
	then mv "$(DEPDIR)/MSR-K6.Tpo" "$(DEPDIR)/MSR-K6.Po"; \
	else rm -f "$(DEPDIR)/MSR-K6.Tpo"; exit 1; \
	fi
#	source='AMD/MSR-K6.c' object='MSR-K6.o' libtool=no \
#	depfile='$(DEPDIR)/MSR-K6.Po' tmpdepfile='$(DEPDIR)/MSR-K6.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o MSR-K6.o `test -f 'AMD/MSR-K6.c' || echo '$(srcdir)/'`AMD/MSR-K6.c

MSR-K6.obj: AMD/MSR-K6.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT MSR-K6.obj -MD -MP -MF "$(DEPDIR)/MSR-K6.Tpo" \
	  -c -o MSR-K6.obj `if test -f 'AMD/MSR-K6.c'; then $(CYGPATH_W) 'AMD/MSR-K6.c'; else $(CYGPATH_W) '$(srcdir)/AMD/MSR-K6.c'; fi`; \
	then mv "$(DEPDIR)/MSR-K6.Tpo" "$(DEPDIR)/MSR-K6.Po"; \
	else rm -f "$(DEPDIR)/MSR-K6.Tpo"; exit 1; \
	fi
#	source='AMD/MSR-K6.c' object='MSR-K6.obj' libtool=no \
#	depfile='$(DEPDIR)/MSR-K6.Po' tmpdepfile='$(DEPDIR)/MSR-K6.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o MSR-K6.obj `if test -f 'AMD/MSR-K6.c'; then $(CYGPATH_W) 'AMD/MSR-K6.c'; else $(CYGPATH_W) '$(srcdir)/AMD/MSR-K6.c'; fi`

amd_bluesmoke.o: AMD/amd_bluesmoke.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT amd_bluesmoke.o -MD -MP -MF "$(DEPDIR)/amd_bluesmoke.Tpo" \
	  -c -o amd_bluesmoke.o `test -f 'AMD/amd_bluesmoke.c' || echo '$(srcdir)/'`AMD/amd_bluesmoke.c; \
	then mv "$(DEPDIR)/amd_bluesmoke.Tpo" "$(DEPDIR)/amd_bluesmoke.Po"; \
	else rm -f "$(DEPDIR)/amd_bluesmoke.Tpo"; exit 1; \
	fi
#	source='AMD/amd_bluesmoke.c' object='amd_bluesmoke.o' libtool=no \
#	depfile='$(DEPDIR)/amd_bluesmoke.Po' tmpdepfile='$(DEPDIR)/amd_bluesmoke.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amd_bluesmoke.o `test -f 'AMD/amd_bluesmoke.c' || echo '$(srcdir)/'`AMD/amd_bluesmoke.c

amd_bluesmoke.obj: AMD/amd_bluesmoke.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT amd_bluesmoke.obj -MD -MP -MF "$(DEPDIR)/amd_bluesmoke.Tpo" \
	  -c -o amd_bluesmoke.obj `if test -f 'AMD/amd_bluesmoke.c'; then $(CYGPATH_W) 'AMD/amd_bluesmoke.c'; else $(CYGPATH_W) '$(srcdir)/AMD/amd_bluesmoke.c'; fi`; \
	then mv "$(DEPDIR)/amd_bluesmoke.Tpo" "$(DEPDIR)/amd_bluesmoke.Po"; \
	else rm -f "$(DEPDIR)/amd_bluesmoke.Tpo"; exit 1; \
	fi
#	source='AMD/amd_bluesmoke.c' object='amd_bluesmoke.obj' libtool=no \
#	depfile='$(DEPDIR)/amd_bluesmoke.Po' tmpdepfile='$(DEPDIR)/amd_bluesmoke.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amd_bluesmoke.obj `if test -f 'AMD/amd_bluesmoke.c'; then $(CYGPATH_W) 'AMD/amd_bluesmoke.c'; else $(CYGPATH_W) '$(srcdir)/AMD/amd_bluesmoke.c'; fi`

amd_identify.o: AMD/amd_identify.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT amd_identify.o -MD -MP -MF "$(DEPDIR)/amd_identify.Tpo" \
	  -c -o amd_identify.o `test -f 'AMD/amd_identify.c' || echo '$(srcdir)/'`AMD/amd_identify.c; \
	then mv "$(DEPDIR)/amd_identify.Tpo" "$(DEPDIR)/amd_identify.Po"; \
	else rm -f "$(DEPDIR)/amd_identify.Tpo"; exit 1; \
	fi
#	source='AMD/amd_identify.c' object='amd_identify.o' libtool=no \
#	depfile='$(DEPDIR)/amd_identify.Po' tmpdepfile='$(DEPDIR)/amd_identify.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amd_identify.o `test -f 'AMD/amd_identify.c' || echo '$(srcdir)/'`AMD/amd_identify.c

amd_identify.obj: AMD/amd_identify.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT amd_identify.obj -MD -MP -MF "$(DEPDIR)/amd_identify.Tpo" \
	  -c -o amd_identify.obj `if test -f 'AMD/amd_identify.c'; then $(CYGPATH_W) 'AMD/amd_identify.c'; else $(CYGPATH_W) '$(srcdir)/AMD/amd_identify.c'; fi`; \
	then mv "$(DEPDIR)/amd_identify.Tpo" "$(DEPDIR)/amd_identify.Po"; \
	else rm -f "$(DEPDIR)/amd_identify.Tpo"; exit 1; \
	fi
#	source='AMD/amd_identify.c' object='amd_identify.obj' libtool=no \
#	depfile='$(DEPDIR)/amd_identify.Po' tmpdepfile='$(DEPDIR)/amd_identify.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amd_identify.obj `if test -f 'AMD/amd_identify.c'; then $(CYGPATH_W) 'AMD/amd_identify.c'; else $(CYGPATH_W) '$(srcdir)/AMD/amd_identify.c'; fi`

cyrix_identify.o: Cyrix/cyrix_identify.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cyrix_identify.o -MD -MP -MF "$(DEPDIR)/cyrix_identify.Tpo" \
	  -c -o cyrix_identify.o `test -f 'Cyrix/cyrix_identify.c' || echo '$(srcdir)/'`Cyrix/cyrix_identify.c; \
	then mv "$(DEPDIR)/cyrix_identify.Tpo" "$(DEPDIR)/cyrix_identify.Po"; \
	else rm -f "$(DEPDIR)/cyrix_identify.Tpo"; exit 1; \
	fi
#	source='Cyrix/cyrix_identify.c' object='cyrix_identify.o' libtool=no \
#	depfile='$(DEPDIR)/cyrix_identify.Po' tmpdepfile='$(DEPDIR)/cyrix_identify.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cyrix_identify.o `test -f 'Cyrix/cyrix_identify.c' || echo '$(srcdir)/'`Cyrix/cyrix_identify.c

cyrix_identify.obj: Cyrix/cyrix_identify.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cyrix_identify.obj -MD -MP -MF "$(DEPDIR)/cyrix_identify.Tpo" \
	  -c -o cyrix_identify.obj `if test -f 'Cyrix/cyrix_identify.c'; then $(CYGPATH_W) 'Cyrix/cyrix_identify.c'; else $(CYGPATH_W) '$(srcdir)/Cyrix/cyrix_identify.c'; fi`; \
	then mv "$(DEPDIR)/cyrix_identify.Tpo" "$(DEPDIR)/cyrix_identify.Po"; \
	else rm -f "$(DEPDIR)/cyrix_identify.Tpo"; exit 1; \
	fi
#	source='Cyrix/cyrix_identify.c' object='cyrix_identify.obj' libtool=no \
#	depfile='$(DEPDIR)/cyrix_identify.Po' tmpdepfile='$(DEPDIR)/cyrix_identify.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cyrix_identify.obj `if test -f 'Cyrix/cyrix_identify.c'; then $(CYGPATH_W) 'Cyrix/cyrix_identify.c'; else $(CYGPATH_W) '$(srcdir)/Cyrix/cyrix_identify.c'; fi`

MSR-C3.o: IDT/MSR-C3.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT MSR-C3.o -MD -MP -MF "$(DEPDIR)/MSR-C3.Tpo" \
	  -c -o MSR-C3.o `test -f 'IDT/MSR-C3.c' || echo '$(srcdir)/'`IDT/MSR-C3.c; \
	then mv "$(DEPDIR)/MSR-C3.Tpo" "$(DEPDIR)/MSR-C3.Po"; \
	else rm -f "$(DEPDIR)/MSR-C3.Tpo"; exit 1; \
	fi
#	source='IDT/MSR-C3.c' object='MSR-C3.o' libtool=no \
#	depfile='$(DEPDIR)/MSR-C3.Po' tmpdepfile='$(DEPDIR)/MSR-C3.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o MSR-C3.o `test -f 'IDT/MSR-C3.c' || echo '$(srcdir)/'`IDT/MSR-C3.c

MSR-C3.obj: IDT/MSR-C3.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT MSR-C3.obj -MD -MP -MF "$(DEPDIR)/MSR-C3.Tpo" \
	  -c -o MSR-C3.obj `if test -f 'IDT/MSR-C3.c'; then $(CYGPATH_W) 'IDT/MSR-C3.c'; else $(CYGPATH_W) '$(srcdir)/IDT/MSR-C3.c'; fi`; \
	then mv "$(DEPDIR)/MSR-C3.Tpo" "$(DEPDIR)/MSR-C3.Po"; \
	else rm -f "$(DEPDIR)/MSR-C3.Tpo"; exit 1; \
	fi
#	source='IDT/MSR-C3.c' object='MSR-C3.obj' libtool=no \
#	depfile='$(DEPDIR)/MSR-C3.Po' tmpdepfile='$(DEPDIR)/MSR-C3.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o MSR-C3.obj `if test -f 'IDT/MSR-C3.c'; then $(CYGPATH_W) 'IDT/MSR-C3.c'; else $(CYGPATH_W) '$(srcdir)/IDT/MSR-C3.c'; fi`

idt_identify.o: IDT/idt_identify.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT idt_identify.o -MD -MP -MF "$(DEPDIR)/idt_identify.Tpo" \
	  -c -o idt_identify.o `test -f 'IDT/idt_identify.c' || echo '$(srcdir)/'`IDT/idt_identify.c; \
	then mv "$(DEPDIR)/idt_identify.Tpo" "$(DEPDIR)/idt_identify.Po"; \
	else rm -f "$(DEPDIR)/idt_identify.Tpo"; exit 1; \
	fi
#	source='IDT/idt_identify.c' object='idt_identify.o' libtool=no \
#	depfile='$(DEPDIR)/idt_identify.Po' tmpdepfile='$(DEPDIR)/idt_identify.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o idt_identify.o `test -f 'IDT/idt_identify.c' || echo '$(srcdir)/'`IDT/idt_identify.c

idt_identify.obj: IDT/idt_identify.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT idt_identify.obj -MD -MP -MF "$(DEPDIR)/idt_identify.Tpo" \
	  -c -o idt_identify.obj `if test -f 'IDT/idt_identify.c'; then $(CYGPATH_W) 'IDT/idt_identify.c'; else $(CYGPATH_W) '$(srcdir)/IDT/idt_identify.c'; fi`; \
	then mv "$(DEPDIR)/idt_identify.Tpo" "$(DEPDIR)/idt_identify.Po"; \
	else rm -f "$(DEPDIR)/idt_identify.Tpo"; exit 1; \
	fi
#	source='IDT/idt_identify.c' object='idt_identify.obj' libtool=no \
#	depfile='$(DEPDIR)/idt_identify.Po' tmpdepfile='$(DEPDIR)/idt_identify.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o idt_identify.obj `if test -f 'IDT/idt_identify.c'; then $(CYGPATH_W) 'IDT/idt_identify.c'; else $(CYGPATH_W) '$(srcdir)/IDT/idt_identify.c'; fi`

intel_bluesmoke.o: Intel/intel_bluesmoke.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT intel_bluesmoke.o -MD -MP -MF "$(DEPDIR)/intel_bluesmoke.Tpo" \
	  -c -o intel_bluesmoke.o `test -f 'Intel/intel_bluesmoke.c' || echo '$(srcdir)/'`Intel/intel_bluesmoke.c; \
	then mv "$(DEPDIR)/intel_bluesmoke.Tpo" "$(DEPDIR)/intel_bluesmoke.Po"; \
	else rm -f "$(DEPDIR)/intel_bluesmoke.Tpo"; exit 1; \
	fi
#	source='Intel/intel_bluesmoke.c' object='intel_bluesmoke.o' libtool=no \
#	depfile='$(DEPDIR)/intel_bluesmoke.Po' tmpdepfile='$(DEPDIR)/intel_bluesmoke.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o intel_bluesmoke.o `test -f 'Intel/intel_bluesmoke.c' || echo '$(srcdir)/'`Intel/intel_bluesmoke.c

intel_bluesmoke.obj: Intel/intel_bluesmoke.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT intel_bluesmoke.obj -MD -MP -MF "$(DEPDIR)/intel_bluesmoke.Tpo" \
	  -c -o intel_bluesmoke.obj `if test -f 'Intel/intel_bluesmoke.c'; then $(CYGPATH_W) 'Intel/intel_bluesmoke.c'; else $(CYGPATH_W) '$(srcdir)/Intel/intel_bluesmoke.c'; fi`; \
	then mv "$(DEPDIR)/intel_bluesmoke.Tpo" "$(DEPDIR)/intel_bluesmoke.Po"; \
	else rm -f "$(DEPDIR)/intel_bluesmoke.Tpo"; exit 1; \
	fi
#	source='Intel/intel_bluesmoke.c' object='intel_bluesmoke.obj' libtool=no \
#	depfile='$(DEPDIR)/intel_bluesmoke.Po' tmpdepfile='$(DEPDIR)/intel_bluesmoke.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o intel_bluesmoke.obj `if test -f 'Intel/intel_bluesmoke.c'; then $(CYGPATH_W) 'Intel/intel_bluesmoke.c'; else $(CYGPATH_W) '$(srcdir)/Intel/intel_bluesmoke.c'; fi`

cachesize.o: Intel/cachesize.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cachesize.o -MD -MP -MF "$(DEPDIR)/cachesize.Tpo" \
	  -c -o cachesize.o `test -f 'Intel/cachesize.c' || echo '$(srcdir)/'`Intel/cachesize.c; \
	then mv "$(DEPDIR)/cachesize.Tpo" "$(DEPDIR)/cachesize.Po"; \
	else rm -f "$(DEPDIR)/cachesize.Tpo"; exit 1; \
	fi
#	source='Intel/cachesize.c' object='cachesize.o' libtool=no \
#	depfile='$(DEPDIR)/cachesize.Po' tmpdepfile='$(DEPDIR)/cachesize.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cachesize.o `test -f 'Intel/cachesize.c' || echo '$(srcdir)/'`Intel/cachesize.c

cachesize.obj: Intel/cachesize.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cachesize.obj -MD -MP -MF "$(DEPDIR)/cachesize.Tpo" \
	  -c -o cachesize.obj `if test -f 'Intel/cachesize.c'; then $(CYGPATH_W) 'Intel/cachesize.c'; else $(CYGPATH_W) '$(srcdir)/Intel/cachesize.c'; fi`; \
	then mv "$(DEPDIR)/cachesize.Tpo" "$(DEPDIR)/cachesize.Po"; \
	else rm -f "$(DEPDIR)/cachesize.Tpo"; exit 1; \
	fi
#	source='Intel/cachesize.c' object='cachesize.obj' libtool=no \
#	depfile='$(DEPDIR)/cachesize.Po' tmpdepfile='$(DEPDIR)/cachesize.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cachesize.obj `if test -f 'Intel/cachesize.c'; then $(CYGPATH_W) 'Intel/cachesize.c'; else $(CYGPATH_W) '$(srcdir)/Intel/cachesize.c'; fi`

eblcr.o: Intel/eblcr.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT eblcr.o -MD -MP -MF "$(DEPDIR)/eblcr.Tpo" \
	  -c -o eblcr.o `test -f 'Intel/eblcr.c' || echo '$(srcdir)/'`Intel/eblcr.c; \
	then mv "$(DEPDIR)/eblcr.Tpo" "$(DEPDIR)/eblcr.Po"; \
	else rm -f "$(DEPDIR)/eblcr.Tpo"; exit 1; \
	fi
#	source='Intel/eblcr.c' object='eblcr.o' libtool=no \
#	depfile='$(DEPDIR)/eblcr.Po' tmpdepfile='$(DEPDIR)/eblcr.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o eblcr.o `test -f 'Intel/eblcr.c' || echo '$(srcdir)/'`Intel/eblcr.c

eblcr.obj: Intel/eblcr.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT eblcr.obj -MD -MP -MF "$(DEPDIR)/eblcr.Tpo" \
	  -c -o eblcr.obj `if test -f 'Intel/eblcr.c'; then $(CYGPATH_W) 'Intel/eblcr.c'; else $(CYGPATH_W) '$(srcdir)/Intel/eblcr.c'; fi`; \
	then mv "$(DEPDIR)/eblcr.Tpo" "$(DEPDIR)/eblcr.Po"; \
	else rm -f "$(DEPDIR)/eblcr.Tpo"; exit 1; \
	fi
#	source='Intel/eblcr.c' object='eblcr.obj' libtool=no \
#	depfile='$(DEPDIR)/eblcr.Po' tmpdepfile='$(DEPDIR)/eblcr.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o eblcr.obj `if test -f 'Intel/eblcr.c'; then $(CYGPATH_W) 'Intel/eblcr.c'; else $(CYGPATH_W) '$(srcdir)/Intel/eblcr.c'; fi`

intel_identify.o: Intel/intel_identify.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT intel_identify.o -MD -MP -MF "$(DEPDIR)/intel_identify.Tpo" \
	  -c -o intel_identify.o `test -f 'Intel/intel_identify.c' || echo '$(srcdir)/'`Intel/intel_identify.c; \
	then mv "$(DEPDIR)/intel_identify.Tpo" "$(DEPDIR)/intel_identify.Po"; \
	else rm -f "$(DEPDIR)/intel_identify.Tpo"; exit 1; \
	fi
#	source='Intel/intel_identify.c' object='intel_identify.o' libtool=no \
#	depfile='$(DEPDIR)/intel_identify.Po' tmpdepfile='$(DEPDIR)/intel_identify.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o intel_identify.o `test -f 'Intel/intel_identify.c' || echo '$(srcdir)/'`Intel/intel_identify.c

intel_identify.obj: Intel/intel_identify.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT intel_identify.obj -MD -MP -MF "$(DEPDIR)/intel_identify.Tpo" \
	  -c -o intel_identify.obj `if test -f 'Intel/intel_identify.c'; then $(CYGPATH_W) 'Intel/intel_identify.c'; else $(CYGPATH_W) '$(srcdir)/Intel/intel_identify.c'; fi`; \
	then mv "$(DEPDIR)/intel_identify.Tpo" "$(DEPDIR)/intel_identify.Po"; \
	else rm -f "$(DEPDIR)/intel_identify.Tpo"; exit 1; \
	fi
#	source='Intel/intel_identify.c' object='intel_identify.obj' libtool=no \
#	depfile='$(DEPDIR)/intel_identify.Po' tmpdepfile='$(DEPDIR)/intel_identify.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o intel_identify.obj `if test -f 'Intel/intel_identify.c'; then $(CYGPATH_W) 'Intel/intel_identify.c'; else $(CYGPATH_W) '$(srcdir)/Intel/intel_identify.c'; fi`

natsemi_identify.o: NatSemi/natsemi_identify.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT natsemi_identify.o -MD -MP -MF "$(DEPDIR)/natsemi_identify.Tpo" \
	  -c -o natsemi_identify.o `test -f 'NatSemi/natsemi_identify.c' || echo '$(srcdir)/'`NatSemi/natsemi_identify.c; \
	then mv "$(DEPDIR)/natsemi_identify.Tpo" "$(DEPDIR)/natsemi_identify.Po"; \
	else rm -f "$(DEPDIR)/natsemi_identify.Tpo"; exit 1; \
	fi
#	source='NatSemi/natsemi_identify.c' object='natsemi_identify.o' libtool=no \
#	depfile='$(DEPDIR)/natsemi_identify.Po' tmpdepfile='$(DEPDIR)/natsemi_identify.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o natsemi_identify.o `test -f 'NatSemi/natsemi_identify.c' || echo '$(srcdir)/'`NatSemi/natsemi_identify.c

natsemi_identify.obj: NatSemi/natsemi_identify.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT natsemi_identify.obj -MD -MP -MF "$(DEPDIR)/natsemi_identify.Tpo" \
	  -c -o natsemi_identify.obj `if test -f 'NatSemi/natsemi_identify.c'; then $(CYGPATH_W) 'NatSemi/natsemi_identify.c'; else $(CYGPATH_W) '$(srcdir)/NatSemi/natsemi_identify.c'; fi`; \
	then mv "$(DEPDIR)/natsemi_identify.Tpo" "$(DEPDIR)/natsemi_identify.Po"; \
	else rm -f "$(DEPDIR)/natsemi_identify.Tpo"; exit 1; \
	fi
#	source='NatSemi/natsemi_identify.c' object='natsemi_identify.obj' libtool=no \
#	depfile='$(DEPDIR)/natsemi_identify.Po' tmpdepfile='$(DEPDIR)/natsemi_identify.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o natsemi_identify.obj `if test -f 'NatSemi/natsemi_identify.c'; then $(CYGPATH_W) 'NatSemi/natsemi_identify.c'; else $(CYGPATH_W) '$(srcdir)/NatSemi/natsemi_identify.c'; fi`

rise_identify.o: RiSE/rise_identify.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rise_identify.o -MD -MP -MF "$(DEPDIR)/rise_identify.Tpo" \
	  -c -o rise_identify.o `test -f 'RiSE/rise_identify.c' || echo '$(srcdir)/'`RiSE/rise_identify.c; \
	then mv "$(DEPDIR)/rise_identify.Tpo" "$(DEPDIR)/rise_identify.Po"; \
	else rm -f "$(DEPDIR)/rise_identify.Tpo"; exit 1; \
	fi
#	source='RiSE/rise_identify.c' object='rise_identify.o' libtool=no \
#	depfile='$(DEPDIR)/rise_identify.Po' tmpdepfile='$(DEPDIR)/rise_identify.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rise_identify.o `test -f 'RiSE/rise_identify.c' || echo '$(srcdir)/'`RiSE/rise_identify.c

rise_identify.obj: RiSE/rise_identify.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rise_identify.obj -MD -MP -MF "$(DEPDIR)/rise_identify.Tpo" \
	  -c -o rise_identify.obj `if test -f 'RiSE/rise_identify.c'; then $(CYGPATH_W) 'RiSE/rise_identify.c'; else $(CYGPATH_W) '$(srcdir)/RiSE/rise_identify.c'; fi`; \
	then mv "$(DEPDIR)/rise_identify.Tpo" "$(DEPDIR)/rise_identify.Po"; \
	else rm -f "$(DEPDIR)/rise_identify.Tpo"; exit 1; \
	fi
#	source='RiSE/rise_identify.c' object='rise_identify.obj' libtool=no \
#	depfile='$(DEPDIR)/rise_identify.Po' tmpdepfile='$(DEPDIR)/rise_identify.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rise_identify.obj `if test -f 'RiSE/rise_identify.c'; then $(CYGPATH_W) 'RiSE/rise_identify.c'; else $(CYGPATH_W) '$(srcdir)/RiSE/rise_identify.c'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = .
distdir = $(PACKAGE)-$(VERSION)

am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }

GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkinstalldirs) $(distdir)/config
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist dist-all: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	$(am__remove_distdir)
	GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && $(mkinstalldirs) "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist-gzip \
	  && rm -f $(distdir).tar.gz \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@echo "$(distdir).tar.gz is ready for distribution" | \
	  sed 'h;s/./=/g;p;x;p;x'
distuninstallcheck:
	cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf autom4te.cache
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags dist dist-all dist-gzip distcheck distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
