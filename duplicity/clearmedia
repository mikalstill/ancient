#!/usr/bin/python

"""Clear all references to a piece of backup media, ready for a rescan."""

# Note that this is an expensive operation

import sys
sys.path.append('/data/src/stillhq_public/trunk/python/')

import datetime
import os
import time
import MySQLdb

import gflags
import sql


FLAGS = gflags.FLAGS
gflags.DEFINE_string('dbuser', 'duplicity', 'DB username')
gflags.DEFINE_string('dbpassword', 'duplicity', 'DB user password')
gflags.DEFINE_string('dbname', 'duplicity', 'DB name')

gflags.DEFINE_string('media', '', 'The name of the backup media')


def main(argv):
  # Parse flags
  try:
    argv = FLAGS(argv)

  except gflags.FlagsError, e:
    print 'Flags error: %s' % e
    print
    print FLAGS

  if not FLAGS.media:
    print 'Please specify the name of this backup set with --media'
    sys.exit(1)

  db = MySQLdb.connect(user = FLAGS.dbuser, db = FLAGS.dbname,
                       passwd = FLAGS.dbpassword)
  cursor = db.cursor(MySQLdb.cursors.DictCursor)
  cursor2 = db.cursor(MySQLdb.cursors.DictCursor)

  # Remove versions
  deleted_count = 0
  cursor.execute('update versions set media_%s="P" where media_%s="N";'
                 %(FLAGS.media, FLAGS.media))
  deleted_count += cursor.rowcount
  cursor.execute('commit;')
  deleted_count += cursor.rowcount

  # Remove seen files
  cursor.execute('update entities set media_%s="P" where media_%s="N";'
                 %(FLAGS.media, FLAGS.media))
  cursor.execute('commit;')

  print 'Done, touching %d versions' % deleted_count
      

if __name__ == "__main__":
  main(sys.argv)
